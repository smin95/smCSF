% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sm_areaCSF.R
\docType{data}
\name{sm_areaCSF}
\alias{sm_areaCSF}
\alias{StatSmAreaCSF}
\alias{GeomSmAreaCSF}
\title{Filling the area of the contrast sensitivity function}
\usage{
sm_areaCSF(
  mapping = NULL,
  data = NULL,
  position = "identity",
  na.rm = FALSE,
  outline.type = "upper",
  show.legend = NA,
  inherit.aes = TRUE,
  n = 100,
  logXY = TRUE,
  param0 = log10(c(100, 1, 2, 0.5)),
  param_upLimit = log10(c(2000, 20, 9, 2)),
  param_lowLimit = log10(c(2, 0.2, 1, 0.02)),
  ...
)
}
\arguments{
\item{mapping}{This argument is to establish the x and y axes. The columns which represent
x and y should be inside \code{aes()}.}

\item{data}{This argument refers to the variable that stores the data frame that contains
the data that is to be plotted.}

\item{position}{Position adjustment.}

\item{na.rm}{This argument should be set to TRUE or FALSE. If TRUE, the missing values
are removed without warnings. If FALSE< the missing values are removed
with warnings.}

\item{outline.type}{This argument specifies whether the upper and lower lines of the area
should be drawn (\code{both}), or upper line (\code{upper}) or lower line (\code{lower}).
\code{Full} draws a polygon.}

\item{show.legend}{This argument should be set to TRUE or FALSE. If TRUE, the aesthetics that are
mapped in \code{aes()} will be included in the legend. If FALSE, these will
not be included.}

\item{inherit.aes}{If \code{FALSE},the function bypasses the default aesthetics. The default
is set to \code{TRUE}.}

\item{n}{Number of predicted data that are generated from the given model.}

\item{logXY}{When this argument is set to TRUE (default), the function will convert the x and y values
into log10 units, and then perform the integration. If it is set to FALSE,
the function will keep the data values as they are.}

\item{param0}{A vector that contains initial four parameters in log10 units in this order:
\enumerate{
\item peak gain, 2) peak spatial frequency, 3) bandwidth, and
\item truncation value.
}}

\item{param_upLimit}{A vector that contains the upper limit of the four parameters (in log10 units)
in this order: 1) peak gain, 2) peak spatial frequency, 3) bandwidth, and
4) truncation value.}

\item{param_lowLimit}{A vector that contains the lower limit of the four parameters (in log10 units)
in this order: 1) peak gain, 2) peak spatial frequency, 3) bandwidth, and
4) truncation value.}

\item{...}{Other arguments that are passed to control for the appearance of the
contrast sensitivity function, such as \code{alpha = 0.5} or
\code{color = sm_color('blue')}.}
}
\description{
Conventionally, the area of the contrast sensitivity function is filled
to describe how one has conducted data analysis or just for aesthetic
purposes. This function fills the area of the contrast sensitivity function.

The function's default converts the x and y coordinates into log scales.
This can be overturned when \code{logXY = FALSE}.
}
\examples{
\dontrun{
x <- c(0.6,1,2,4,8,16,24,36) # spatial frequency
y <- c(30, 50, 35, 25, 6, 4, 2, 1) # contrast sensitivity
df <- data.frame(x=x,y=y)

# linear plot of CSF
ggplot(data=df,aes(x,y)) +
geom_point() +
sm_areaCSF(logXY=F)+
sm_CSF(logXY=F)

# log plot of CSF
ggplot(data=df,aes(log10(x), log10(y))) +
 geom_point() +
 sm_areaCSF()+
 sm_CSF()

 # log plot of CSF
 ggplot(data=df,aes(x,y)) +
 geom_point() +
 sm_areaCSF()+
 sm_CSF() +
 scale_x_continuous(trans='log10')+
 scale_y_continuous(trans='log10')

}

}
\keyword{datasets}
