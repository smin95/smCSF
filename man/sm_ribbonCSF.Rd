% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sm_ribbonCSF.R
\docType{data}
\name{sm_ribbonCSF}
\alias{sm_ribbonCSF}
\alias{StatSmRibbonCSF}
\alias{GeomSmRibbonCSF}
\title{Error ribbon (shade) of the contrast sensitivity function}
\usage{
sm_ribbonCSF(
  mapping = NULL,
  data = NULL,
  position = "identity",
  na.rm = FALSE,
  outline.type = "upper",
  show.legend = NA,
  inherit.aes = TRUE,
  n = 100,
  logXY = TRUE,
  param0 = log10(c(100, 1, 2, 0.5)),
  param_upLimit = log10(c(2000, 20, 9, 2)),
  param_lowLimit = log10(c(2, 0.2, 1, 0.02)),
  ...
)
}
\arguments{
\item{mapping}{This argument is to establish the x and y axes. The columns which represent
x and y should be inside \code{aes()}.}

\item{data}{This argument refers to the variable that stores the data frame that contains
the data that is to be plotted.}

\item{position}{Position adjustment.}

\item{na.rm}{This argument should be set to TRUE or FALSE. If TRUE, the missing values
are removed without warnings. If FALSE< the missing values are removed
with warnings.}

\item{outline.type}{This argument specifies whether the upper and lower lines of the area
should be drawn (\code{both}), or upper line (\code{upper}) or lower line (\code{lower}).
\code{Full} draws a polygon.}

\item{show.legend}{This argument should be set to TRUE or FALSE. If TRUE, the aesthetics that are
mapped in \code{aes()} will be included in the legend. If FALSE, these will
not be included.}

\item{inherit.aes}{If \code{FALSE},the function bypasses the default aesthetics. The default
is set to \code{TRUE}.}

\item{n}{Number of predicted data that are generated from the given model.}

\item{logXY}{When this argument is set to TRUE (default), the function will convert the x and y values
into log10 units, and then perform the integration. If it is set to FALSE,
the function will keep the data values as they are.}

\item{param0}{A vector that contains initial four parameters in log10 units in this order:
\enumerate{
\item peak gain, 2) peak spatial frequency, 3) bandwidth, and
\item truncation value.
}}

\item{param_upLimit}{A vector that contains the upper limit of the four parameters (in log10 units)
in this order: 1) peak gain, 2) peak spatial frequency, 3) bandwidth, and
4) truncation value.}

\item{param_lowLimit}{A vector that contains the lower limit of the four parameters (in log10 units)
in this order: 1) peak gain, 2) peak spatial frequency, 3) bandwidth, and
4) truncation value.}

\item{...}{Other arguments that are passed to control for the appearance of the
contrast sensitivity function, such as \code{alpha = 0.5} or
\code{color = sm_color('blue')}.}
}
\description{
Usually, the standard error/deviation of the fitted contrast sensitivity function
is shown as a ribbon rather than error bars. This function helps the user
to follow the convention.
}
\examples{
\dontrun{
x <- c(0.25,0.35,0.48,0.68,0.94,1.31,1.83,2.54) # spatial frequency
y <- c(141,172,190,187,164,129,90.3,57.1) # averaged contrast sensitivity of subjects
se <- c(9.6,11,11.1,9.9,7.9,6.1,4.8,3.8) # standard error across subjects
df <- data.frame(x=x,y=y, se=se)

# linear plot of CSF
ggplot(data=df,aes(x,y)) +
sm_ribbonCSF(aes(ymin = y-se, ymax = y+se), logXY = F) +
 geom_point() +
 sm_CSF(logXY=F)

# log plot of CSF
ggplot(data=df,aes(x,y)) +
sm_ribbonCSF(aes(ymin = y-se, ymax = y+se)) +
 geom_point() +
 sm_CSF() +
 scale_x_continuous(trans='log10') +
 scale_y_continuous(trans='log10')
}


}
\keyword{datasets}
